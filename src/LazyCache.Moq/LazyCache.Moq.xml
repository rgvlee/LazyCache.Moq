<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LazyCache.Moq</name>
    </assembly>
    <members>
        <member name="T:LazyCache.Moq.CacheEntryFake">
            <summary>
            A fake cache entry used to obtain a result from an addItemFactory parameter.
            </summary>
        </member>
        <member name="M:LazyCache.Moq.CacheEntryFake.Dispose">
            <inheritdoc />
        </member>
        <member name="P:LazyCache.Moq.CacheEntryFake.Key">
            <inheritdoc />
        </member>
        <member name="P:LazyCache.Moq.CacheEntryFake.Value">
            <inheritdoc />
        </member>
        <member name="P:LazyCache.Moq.CacheEntryFake.AbsoluteExpiration">
            <inheritdoc />
        </member>
        <member name="P:LazyCache.Moq.CacheEntryFake.AbsoluteExpirationRelativeToNow">
            <inheritdoc />
        </member>
        <member name="P:LazyCache.Moq.CacheEntryFake.SlidingExpiration">
            <inheritdoc />
        </member>
        <member name="P:LazyCache.Moq.CacheEntryFake.ExpirationTokens">
            <inheritdoc />
        </member>
        <member name="P:LazyCache.Moq.CacheEntryFake.PostEvictionCallbacks">
            <inheritdoc />
        </member>
        <member name="P:LazyCache.Moq.CacheEntryFake.Priority">
            <inheritdoc />
        </member>
        <member name="P:LazyCache.Moq.CacheEntryFake.Size">
            <inheritdoc />
        </member>
        <member name="T:LazyCache.Moq.Extensions.MockExtensions">
            <summary>
            Extensions for mocks.
            </summary>
        </member>
        <member name="M:LazyCache.Moq.Extensions.MockExtensions.SetUpCacheEntry``1(Moq.Mock{LazyCache.IAppCache},System.String,``0)">
            <summary>
            Sets up a cache entry.
            </summary>
            <typeparam name="T">The cache entry value type.</typeparam>
            <param name="cachingServiceMock">The caching service mock instance.</param>
            <param name="key">The cache entry key.</param>
            <param name="value">The cache entry value.</param>
            <returns>The cache entry value.</returns>
        </member>
        <member name="T:LazyCache.Moq.Extensions.TypeExtensions">
            <summary>
            Extensions for types.
            </summary>
        </member>
        <member name="M:LazyCache.Moq.Extensions.TypeExtensions.GetDefaultValue(System.Type)">
            <summary>
            Gets the default value for the specified type.
            </summary>
            <param name="type">The type instance.</param>
            <returns>The default value for the specified type.</returns>
        </member>
        <member name="T:LazyCache.Moq.LazyCacheDefaultValueProvider">
            <summary>
            Default value provider for methods that have not been set up on a lazy cache mock.
            </summary>
        </member>
        <member name="M:LazyCache.Moq.LazyCacheDefaultValueProvider.GetDefaultValue(System.Type,Moq.Mock)">
            <summary>
                Checks the last method invocation on the mock;
                if GetOrAdd or GetOrAddAsync was invoked the addItemFactory result will be returned;
                otherwise the default value for the specified type will be returned.
            </summary>
            <param name="type">The type of the requested default value.</param>
            <param name="mock">The mock on which an unexpected invocation has occurred.</param>
            <returns>
                Checks the last method invocation on the mock;
                if GetOrAdd or GetOrAddAsync was invoked the addItemFactory result will be returned;
                otherwise the default value for the specified type will be returned.
            </returns>
        </member>
        <member name="T:LazyCache.Moq.MockFactory">
            <summary>
            Factory for creating mock/mocked instances.
            </summary>
        </member>
        <member name="M:LazyCache.Moq.MockFactory.CreateCachingServiceMock">
            <summary>
            Creates a caching service mock.
            </summary>
            <returns>A caching service mock.</returns>
        </member>
        <member name="M:LazyCache.Moq.MockFactory.CreateMockedCachingService">
            <summary>
            Creates a mocked caching service.
            </summary>
            <returns>A mocked caching service.</returns>
        </member>
    </members>
</doc>
